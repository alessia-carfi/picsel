CREATE TABLE login_attempts (
  user_id INT(11) not null,
  `time` VARCHAR(30) not null
);

create table COMMENT (
     comment_id int auto_increment not null,
     text varchar(255) not null,
     post_id int not null,
     user_id int not null,
     constraint IDCOMMENT primary key (comment_id));

create table GAME (
     game_id int auto_increment not null,
     name varchar(255) not null,
     description varchar(255) not null,
     user_id int not null,
     constraint IDGAME_ID primary key (game_id));

create table FOLLOWS_GAME (
     game_id int not null,
     user_id int not null,
     constraint IDfollows_game primary key (game_id, user_id));

create table FOLLOWS_USER (
     Fol_user_id int not null,
     user_id int not null,
     constraint IDfollows_user primary key (Fol_user_id, user_id));

create table HAS_TAG (
     name varchar(255) not null,
     game_id int not null,
     constraint IDhas primary key (name, game_id));
     
create table LIKED (
     post_id int not null,
     user_id int not null,
     constraint IDliked primary key (post_id, user_id));

create table NOTIFICATION (
     notification_id int auto_increment not null,
     name varchar(255) not null,
     text varchar(255) not null,
     send_date date not null,
     user_id int not null,
     constraint IDNOTIFICATION primary key (notification_id));

create table POST (
     post_id int auto_increment not null,
     text varchar(255) not null,
     image longblob,
     likes int,
     user_id int not null,
     game_id int not null,
     constraint IDPOST primary key (post_id));

create table TAG (
     name varchar(255) not null,
     constraint IDTAG primary key (name));

create table USR (
     user_id int auto_increment not null,
     p_iva varchar(255),
     name varchar(255) not null,
     nickname varchar(255) not null,
     email varchar(255) not null,
     password varchar(255) not null,
     image longblob,
     constraint IDUSER_ID primary key (user_id));

create table REPLY (
     Rep_comment_id int not null,
     comment_id int not null,
     constraint IDreply primary key (Rep_comment_id, comment_id));

create table SAVED (
     post_id int not null,
     user_id int not null,
     constraint IDsaved primary key (post_id, user_id));

alter table COMMENT add constraint FKcontains
     foreign key (post_id)
     references POST (post_id);

alter table COMMENT add constraint FKwrites
     foreign key (user_id)
     references USR (user_id);

alter table GAME add constraint FKcreate
     foreign key (user_id)
     references USR (user_id);

alter table FOLLOWS_GAME add constraint FKfol_USE
     foreign key (user_id)
     references USR (user_id);

alter table FOLLOWS_GAME add constraint FKfol_GAM
     foreign key (game_id)
     references GAME (game_id);

alter table FOLLOWS_USER add constraint FKfollower
     foreign key (user_id)
     references USR (user_id);

alter table FOLLOWS_USER add constraint FKfollowed
     foreign key (Fol_user_id)
     references USR (user_id);

alter table HAS_TAG add constraint FKhas_GAM
     foreign key (game_id)
     references GAME (game_id);

alter table HAS_TAG add constraint FKhas_TAG
     foreign key (name)
     references TAG (name);

alter table NOTIFICATION add constraint FKreceive
     foreign key (user_id)
     references USR (user_id);

alter table POST add constraint FKmakes
     foreign key (user_id)
     references USR (user_id);

alter table POST add constraint FKbelongs
     foreign key (game_id)
     references GAME (game_id);

alter table REPLY add constraint FKreplies
     foreign key (comment_id)
     references COMMENT (comment_id);

alter table REPLY add constraint FKreplied
     foreign key (Rep_comment_id)
     references COMMENT (comment_id);

alter table SAVED add constraint FKsav_USE
     foreign key (user_id)
     references USR (user_id);

alter table SAVED add constraint FKsav_POS
     foreign key (post_id)
     references POST (post_id);

